{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-3564a2084d19f9eb3dd8d1d22bf142b7",
            "file": "src/app/shared/user.ts",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n  age: number;\n  location: string;\n  email: string;\n  password: string;\n}\n",
            "properties": [
                {
                    "name": "age",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "location",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "CreditCardDirective",
            "id": "directive-CreditCardDirective-32e63394c0b45de6f54561e0a47acf6c",
            "file": "src/app/sec22-custom-attribute-directive/credit-card.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appCreditCard]',\n})\nexport class CreditCardDirective {\n  constructor(private element: ElementRef) {\n    console.log('===> Element: ', this.element);\n  }\n}\n",
            "selector": "[appCreditCard]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "CreditCardDirective",
            "id": "directive-CreditCardDirective-37ca64e5276f6e7e5b34ddcd939d3f8f-1",
            "file": "src/app/sec24-host-binding/credit-card.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appCreditCard]',\n})\nexport class CreditCardDirective {\n  @HostBinding('style.border') border = '';\n\n  @HostListener('input', ['$event']) onKeyDown(event: KeyboardEvent): void {\n    const input = event.target as HTMLInputElement;\n\n    let formattedValue = this.trimNumber(input.value);\n\n    this.border = '';\n    if (/[^\\d]+/.test(formattedValue)) {\n      this.border = '1px solid red';\n    }\n\n    formattedValue = this.formatNumber(formattedValue);\n    input.value = formattedValue;\n  }\n\n  private trimNumber(value: string): string {\n    let trimmed = value.replace(/\\s+/g, '');\n\n    if (trimmed.length > 16) {\n      trimmed = trimmed.substr(0, 16);\n    }\n\n    return trimmed;\n  }\n\n  private formatNumber(value: string): string {\n    const numbers: string[] = [];\n    for (let i = 0; i < value.length; i += 4) {\n      numbers.push(value.substr(i, 4));\n    }\n\n    return numbers.join(' ');\n  }\n}\n",
            "selector": "[appCreditCard]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [
                {
                    "name": "style.border",
                    "defaultValue": "''",
                    "line": 7
                }
            ],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 9
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "formatNumber",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trimNumber",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CreditCardDirective-1"
        },
        {
            "name": "CreditCardDirective",
            "id": "directive-CreditCardDirective-49afe50925231ad3b446c6d3d78eec93-2",
            "file": "src/app/sec23-host-listeners/credit-card.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appCreditCard]',\n})\nexport class CreditCardDirective {\n  @HostListener('input', ['$event']) onKeyDown(event: KeyboardEvent): void {\n    const input = event.target as HTMLInputElement;\n\n    let trimmed = input.value.replace(/\\s+/g, '');\n    if (trimmed.length > 16) {\n      trimmed = trimmed.substr(0, 16);\n    }\n\n    //  Fix Me - Strict types and lint should catch this implicit any...\n    const numbers = [];\n\n    for (let i = 0; i < trimmed.length; i += 4) {\n      numbers.push(trimmed.substr(i, 4));\n    }\n\n    input.value = numbers.join(' ');\n  }\n}\n",
            "selector": "[appCreditCard]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "input",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 7
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "CreditCardDirective-2"
        },
        {
            "name": "MyForDirective",
            "id": "directive-MyForDirective-fe1078a7dccd4eedffbf39663277f545",
            "file": "src/app/sec26-custom-structural-directive/my-for.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appMyFor][appMyForOf]]',\n})\nexport class MyForDirective {\n  @Input() set appMyForOf(collection: unknown[]) {\n    this.view.clear(); //  The real ngFor would clear only the nodes that changed\n\n    collection.forEach((item, index) => {\n      this.view.createEmbeddedView(this.template, {\n        $implicit: item,\n        index, //  shorthand for index: index\n      });\n    });\n  }\n\n  constructor(\n    private view: ViewContainerRef,\n    private template: TemplateRef<unknown>\n  ) {}\n}\n",
            "selector": "[appMyFor][appMyForOf]]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appMyForOf",
                    "line": 7,
                    "type": "[]"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "view",
                        "type": "ViewContainerRef"
                    },
                    {
                        "name": "template",
                        "type": "TemplateRef<unknown>"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "view",
                        "type": "ViewContainerRef",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "template",
                        "type": "TemplateRef<unknown>",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "appMyForOf": {
                    "name": "appMyForOf",
                    "setSignature": {
                        "name": "appMyForOf",
                        "type": "void",
                        "args": [
                            {
                                "name": "collection",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 7,
                        "jsdoctags": [
                            {
                                "name": "collection",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "TestDirective",
            "id": "directive-TestDirective-21ad68582c69f1e98fe91209b9b89cd7",
            "file": "src/app/test.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appTest]',\n  exportAs: 'test',\n})\nexport class TestDirective {\n  constructor() {\n    console.log('===> Test Test');\n  }\n}\n",
            "selector": "[appTest]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 7
            }
        },
        {
            "name": "TooltipDirective",
            "id": "directive-TooltipDirective-17a8e124bc6b42af17085aed485955a1",
            "file": "src/app/sec25-export-as/tooltip.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appTooltip]',\n  exportAs: 'tooltip', //  this allows us to get a template ref variable\n})\nexport class TooltipDirective implements OnInit {\n  tooltipElement = document.createElement('div');\n  visible = false;\n\n  @Input() set appTooltip(value: string) {\n    this.tooltipElement.textContent = value;\n  }\n\n  constructor(private element: ElementRef) {}\n\n  ngOnInit(): void {\n    this.tooltipElement.className = 'tooltip';\n    this.element.nativeElement.appendChild(this.tooltipElement);\n    this.element.nativeElement.classList.add('tooltip-container');\n\n    //  this.tooltipElement.classList.add('tooltip--active');\n  }\n\n  show(): void {\n    this.tooltipElement.classList.add('tooltip--active');\n    console.log('Showing');\n  }\n\n  hide(): void {\n    this.tooltipElement.classList.remove('tooltip--active');\n    console.log('Hiding');\n  }\n}\n",
            "selector": "[appTooltip]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appTooltip",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "tooltipElement",
                    "defaultValue": "document.createElement('div')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "visible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "element",
                        "type": "ElementRef"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "element",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "appTooltip": {
                    "name": "appTooltip",
                    "setSignature": {
                        "name": "appTooltip",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "string"
                            }
                        ],
                        "returnType": "void",
                        "line": 11,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-43f72735d6728dbb9480a2d3dc15edcf",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChecked",
                    "args": [
                        {
                            "name": "event",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "event",
                            "type": "unknown"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "unknown",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  onSubmit(event: unknown): void {}\n  onChecked(event: unknown): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <app-auth-form (submitted)=\"onSubmit($event)\">\n  <h3>Login</h3>\n  <app-auth-remember (checked)=\"onChecked($event)\"> </app-auth-remember>\n  <button type=\"submit\">\n    Login\n  </button>\n</app-auth-form> -->\n\n<!-- <input appCreditCard placeholder=\"Input example\" />\n\n<label tooltip=\"3 digits, back of your card\" #myTooltip=\"tp\">\n  Enter your security code\n  <span (mouseover)=\"myTooltip.show()\" (mouseout)=\"myTooltip.hide()\">\n    (?)\n  </span>\n  <input type=\"text\" />\n</label> -->\n\n<!-- <div appTest #test=\"test\">Testing...</div> -->\n\n<!-- <label appTooltip=\"3 digits, back of your card\" #myTooltip=\"tooltip\">\n  Enter your security code\n  <span (mouseover)=\"myTooltip.show()\" (mouseout)=\"myTooltip.hide()\">\n    (?)\n  </span>\n  <input type=\"text\" />\n</label> -->\n\n<!-- <app-example class=\"app-root\">\n  <ng-template #layoutTemplate>\n    <div>\n      Example of inserted template\n    </div>\n  </ng-template>\n</app-example> -->\n\n<app-example>\n  <ng-template #layoutTemplate>\n    <label appTooltip=\"3 digits, back of your card\" #myTooltip=\"tooltip\">\n      Enter your security code\n      <span (mouseover)=\"myTooltip.show()\" (mouseout)=\"myTooltip.hide()\">\n        (?)\n      </span>\n      <input type=\"text\" />\n    </label>\n  </ng-template>\n</app-example>\n\n<!-- <app-example></app-example> -->\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-57e3ec1a71316eae69121143e5e8e403",
            "file": "src/app/sec01-content-projection/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" />\n    </label>\n    <button type=\"submit\">Submit</button>\n  </form>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  template: `\n    <div>\n      <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n        <ng-content></ng-content>\n        <label for=\"email\">\n          Email Address\n          <input type=\"text\" />\n        </label>\n        <label for=\"password \">\n          Password\n          <input type=\"text\" />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  `,\n  styles: [],\n})\nexport class AuthFormComponent {\n  @Output() submitted = new EventEmitter<User>();\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-71a3e2aeefce9a94b358b81156b7ee08-1",
            "file": "src/app/sec02-content-projection-slots/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent {\n  @Output() submitted = new EventEmitter<User>();\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AuthFormComponent-1",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" />\n    </label>\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-1fe1454ebe80d1bf666f340b40830354-2",
            "file": "src/app/sec04-content-child-and-ng-after-content-init/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authRemember",
                    "defaultValue": "null",
                    "type": "AuthRememberComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "name": "showMe",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRememberComponent } from '../../sec03-projecting-and-binding-to-components/auth-form/auth-remember.component';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent implements AfterContentInit {\n  showMe = new Observable<boolean>();\n\n  @ContentChild(AuthRememberComponent)\n  authRemember: AuthRememberComponent | null = null;\n\n  @Output() submitted = new EventEmitter<User>();\n\n  ngAfterContentInit(): void {\n    console.log('===> ngAfterContentInit', this.authRemember);\n    if (this.authRemember) {\n      console.log(this.authRemember);\n      this.showMe = this.authRemember.checked as Observable<boolean>;\n    }\n  }\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "AuthFormComponent-2",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n\n    <div *ngIf=\"showMe | async\">\n      ngContent did something!\n    </div>\n\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-71a3e2aeefce9a94b358b81156b7ee08-3",
            "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent {\n  @Output() submitted = new EventEmitter<User>();\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "AuthFormComponent-3",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-453a6e81d51f48bb34720737159905fc-4",
            "file": "src/app/sec07-view-children-and-query-lists/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 33,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authMessage",
                    "defaultValue": "null",
                    "type": "QueryList<AuthMessageComponent> | null",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "AuthMessageComponent"
                        }
                    ]
                },
                {
                    "name": "authRememberList",
                    "defaultValue": "null",
                    "type": "QueryList<AuthRememberComponent> | null",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "name": "showOne",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "showThree",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "showTwo",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Output,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRememberComponent } from '../../sec03-projecting-and-binding-to-components/auth-form/auth-remember.component';\nimport { AuthMessageComponent } from '../../shared/components/auth-message/auth-message.component';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent implements AfterViewInit, AfterContentInit {\n  showOne = new Observable<boolean>();\n  showTwo = new Observable<boolean>();\n  showThree = new Observable<boolean>();\n\n  @ViewChildren(AuthMessageComponent)\n  authMessage: QueryList<AuthMessageComponent> | null = null;\n\n  @ContentChildren(AuthRememberComponent)\n  authRememberList: QueryList<AuthRememberComponent> | null = null;\n\n  @Output() submitted = new EventEmitter<User>();\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    //  Note: Not saying this is a good way to handle this. Neither\n    //        is setTimeout. Just an example of change detector\n    //\n    if (this.authMessage) {\n      this.authMessage.forEach((message) => {\n        console.log(this.authMessage);\n        message.days = 30;\n      });\n      this.cd.detectChanges();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    console.log('===> ngAfterContentInit', this.authRememberList);\n    if (this.authRememberList) {\n      console.log(this.authRememberList);\n\n      this.authRememberList.forEach((item, index) => {\n        console.log(`Item #${index}: `, item);\n        if (index === 0) {\n          this.showOne = item.checked as Observable<boolean>;\n        } else if (index === 1) {\n          this.showTwo = item.checked as Observable<boolean>;\n        } else if (index === 2) {\n          this.showThree = item.checked as Observable<boolean>;\n        }\n      });\n    }\n  }\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef"
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "AuthFormComponent-4",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n\n    <app-auth-message\n      [style.display]=\"(showOne | async) ? 'inherit' : 'none'\"\n    ></app-auth-message>\n\n    <app-auth-message\n      [style.display]=\"(showTwo | async) ? 'inherit' : 'none'\"\n    ></app-auth-message>\n\n    <app-auth-message\n      [style.display]=\"(showThree | async) ? 'inherit' : 'none'\"\n    ></app-auth-message>\n\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-4fd6e45b53db8816392bdbbe8c17d9b7-5",
            "file": "src/app/sec05-content-children-and-query-list/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authRememberList",
                    "defaultValue": "null",
                    "type": "QueryList<AuthRememberComponent> | null",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "name": "showOne",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "showThree",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "showTwo",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRememberComponent } from '../../sec03-projecting-and-binding-to-components/auth-form/auth-remember.component';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent implements AfterContentInit {\n  showOne = new Observable<boolean>();\n  showTwo = new Observable<boolean>();\n  showThree = new Observable<boolean>();\n\n  @ContentChildren(AuthRememberComponent)\n  authRememberList: QueryList<AuthRememberComponent> | null = null;\n\n  @Output() submitted = new EventEmitter<User>();\n\n  ngAfterContentInit(): void {\n    console.log('===> ngAfterContentInit', this.authRememberList);\n    if (this.authRememberList) {\n      console.log(this.authRememberList);\n\n      this.authRememberList.forEach((item, index) => {\n        console.log(`Item #${index}: `, item);\n        if (index === 0) {\n          this.showOne = item.checked as Observable<boolean>;\n        } else if (index === 1) {\n          this.showTwo = item.checked as Observable<boolean>;\n        } else if (index === 2) {\n          this.showThree = item.checked as Observable<boolean>;\n        }\n      });\n    }\n  }\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 5,
            "duplicateName": "AuthFormComponent-5",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n\n    <div *ngIf=\"showOne | async\">\n      Show One!\n    </div>\n\n    <div *ngIf=\"showTwo | async\">\n      Show Two!\n    </div>\n\n    <div *ngIf=\"showThree | async\">\n      Show Three!\n    </div>\n\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-946e8ce3c508ba1c6e18a0c3ae17cc60-6",
            "file": "src/app/sec06-view-child-and-ng-after-view-init/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authMessage",
                    "defaultValue": "null",
                    "type": "AuthMessageComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AuthMessageComponent, {static: true}"
                        }
                    ]
                },
                {
                    "name": "authRemember",
                    "defaultValue": "null",
                    "type": "AuthRememberComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "name": "showMessage",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  EventEmitter,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRememberComponent } from '../../sec03-projecting-and-binding-to-components/auth-form/auth-remember.component';\nimport { AuthMessageComponent } from '../../shared/components/auth-message/auth-message.component';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent\n  implements OnInit, AfterViewInit, AfterContentInit {\n  showMessage = new Observable<boolean>();\n\n  @ViewChild(AuthMessageComponent, { static: true })\n  authMessage: AuthMessageComponent | null = null;\n\n  @ContentChild(AuthRememberComponent)\n  authRemember: AuthRememberComponent | null = null;\n\n  @Output() submitted = new EventEmitter<User>();\n\n  ngOnInit(): void {\n    //  Note: I can access ViewChild here because I made it { static: true }\n    //\n    if (this.authMessage) {\n      this.authMessage.days = 30;\n    }\n    console.log(this.authMessage);\n  }\n\n  ngAfterViewInit(): void {\n    //  Note: This will cause 'expression changed after checked' error\n    //\n    // if (this.authMessage) {\n    //   this.authMessage.days = 30;\n    // }\n    // console.log(this.authMessage);\n  }\n\n  ngAfterContentInit(): void {\n    //  console.log('===> ngAfterContentInit', this.authRemember);\n\n    if (this.authRemember) {\n      console.log(this.authRemember);\n      this.showMessage = this.authRemember.checked as Observable<boolean>;\n    }\n\n    //  Note: This is null, even though Todd shows it working. Static?\n    //\n    // if (this.authMessage) {\n    //   this.authMessage.days = 30;\n    // }\n    // console.log('Auth Message: ', this.authMessage);\n  }\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit",
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 6,
            "duplicateName": "AuthFormComponent-6",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n\n    <app-auth-message\n      [style.display]=\"(showMessage | async) ? 'inherit' : 'none'\"\n    >\n    </app-auth-message>\n\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-5a524bc2a875eccf2a8e5d879a3f7042-7",
            "file": "src/app/sec09-element-ref-and-native-element/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [
                "\n      .email {\n        border-color: #9f72e6;\n      }\n    "
            ],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 40,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authMessage",
                    "defaultValue": "null",
                    "type": "AuthMessageComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AuthMessageComponent, {static: true}"
                        }
                    ]
                },
                {
                    "name": "authRemember",
                    "defaultValue": "null",
                    "type": "AuthRememberComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "name": "email",
                    "defaultValue": "null",
                    "type": "ElementRef<HTMLInputElement> | null",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'email'"
                        }
                    ]
                },
                {
                    "name": "showMessage",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRememberComponent } from '../../sec03-projecting-and-binding-to-components/auth-form/auth-remember.component';\nimport { AuthMessageComponent } from '../../shared/components/auth-message/auth-message.component';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [\n    `\n      .email {\n        border-color: #9f72e6;\n      }\n    `,\n  ],\n})\nexport class AuthFormComponent\n  implements OnInit, AfterViewInit, AfterContentInit {\n  showMessage = new Observable<boolean>();\n\n  @ViewChild('email') email: ElementRef<HTMLInputElement> | null = null;\n\n  @ViewChild(AuthMessageComponent, { static: true })\n  authMessage: AuthMessageComponent | null = null;\n\n  @ContentChild(AuthRememberComponent)\n  authRemember: AuthRememberComponent | null = null;\n\n  @Output() submitted = new EventEmitter<User>();\n\n  ngOnInit(): void {\n    //  Note: I can access authMessage ViewChild here because I made it { static: true }\n    //\n    if (this.authMessage) {\n      this.authMessage.days = 30;\n    }\n    console.log(this.authMessage);\n  }\n\n  ngAfterViewInit(): void {\n    console.log(`Email: `, this.email);\n    this.email?.nativeElement.setAttribute('placeholder', 'Enter your email');\n    this.email?.nativeElement.classList.add('email');\n    this.email?.nativeElement.focus();\n  }\n\n  ngAfterContentInit(): void {\n    if (this.authRemember) {\n      console.log(this.authRemember);\n      this.showMessage = this.authRemember.checked as Observable<boolean>;\n    }\n  }\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .email {\n        border-color: #9f72e6;\n      }\n    \n",
            "implements": [
                "OnInit",
                "AfterViewInit",
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 7,
            "duplicateName": "AuthFormComponent-7",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n\n    <app-auth-message\n      [style.display]=\"(showMessage | async) ? 'inherit' : 'none'\"\n    >\n    </app-auth-message>\n\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-3f99ef2de40e1eaeae8bb9452c771979-8",
            "file": "src/app/sec08-view-child-and-template-ref/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authMessage",
                    "defaultValue": "null",
                    "type": "AuthMessageComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AuthMessageComponent, {static: true}"
                        }
                    ]
                },
                {
                    "name": "authRemember",
                    "defaultValue": "null",
                    "type": "AuthRememberComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "name": "email",
                    "defaultValue": "null",
                    "type": "ElementRef | null",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'email'"
                        }
                    ]
                },
                {
                    "name": "showMessage",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRememberComponent } from '../../sec03-projecting-and-binding-to-components/auth-form/auth-remember.component';\nimport { AuthMessageComponent } from '../../shared/components/auth-message/auth-message.component';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent\n  implements OnInit, AfterViewInit, AfterContentInit {\n  showMessage = new Observable<boolean>();\n\n  @ViewChild('email') email: ElementRef | null = null;\n\n  @ViewChild(AuthMessageComponent, { static: true })\n  authMessage: AuthMessageComponent | null = null;\n\n  @ContentChild(AuthRememberComponent)\n  authRemember: AuthRememberComponent | null = null;\n\n  @Output() submitted = new EventEmitter<User>();\n\n  ngOnInit(): void {\n    //  Note: I can access ViewChild here because I made it { static: true }\n    //\n    if (this.authMessage) {\n      this.authMessage.days = 30;\n    }\n    console.log(this.authMessage);\n  }\n\n  ngAfterViewInit(): void {\n    //  Note: This will cause 'expression changed after checked' error\n    //\n    // if (this.authMessage) {\n    //   this.authMessage.days = 30;\n    // }\n    // console.log(this.authMessage);\n\n    console.log(`Email: `, this.email);\n  }\n\n  ngAfterContentInit(): void {\n    //  console.log('===> ngAfterContentInit', this.authRemember);\n\n    if (this.authRemember) {\n      console.log(this.authRemember);\n      this.showMessage = this.authRemember.checked as Observable<boolean>;\n    }\n\n    //  Note: This is null, even though Todd shows it working. Static?\n    //\n    // if (this.authMessage) {\n    //   this.authMessage.days = 30;\n    // }\n    // console.log('Auth Message: ', this.authMessage);\n  }\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit",
                "AfterViewInit",
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 8,
            "duplicateName": "AuthFormComponent-8",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n\n    <app-auth-message\n      [style.display]=\"(showMessage | async) ? 'inherit' : 'none'\"\n    >\n    </app-auth-message>\n\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-93ecc5bab409e25dc19ffad61b649874-9",
            "file": "src/app/sec10-platform-agnostic-renderer/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [
                "\n      .email {\n        border-color: #9f72e6;\n      }\n    "
            ],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authMessage",
                    "defaultValue": "null",
                    "type": "AuthMessageComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "AuthMessageComponent, {static: true}"
                        }
                    ]
                },
                {
                    "name": "authRemember",
                    "defaultValue": "null",
                    "type": "AuthRememberComponent | null",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "name": "email",
                    "defaultValue": "null",
                    "type": "ElementRef<HTMLInputElement> | null",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'email'"
                        }
                    ]
                },
                {
                    "name": "showMessage",
                    "defaultValue": "new Observable<boolean>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRememberComponent } from '../../sec03-projecting-and-binding-to-components/auth-form/auth-remember.component';\nimport { AuthMessageComponent } from '../../shared/components/auth-message/auth-message.component';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [\n    `\n      .email {\n        border-color: #9f72e6;\n      }\n    `,\n  ],\n})\nexport class AuthFormComponent\n  implements OnInit, AfterViewInit, AfterContentInit {\n  showMessage = new Observable<boolean>();\n\n  @ViewChild('email') email: ElementRef<HTMLInputElement> | null = null;\n\n  @ViewChild(AuthMessageComponent, { static: true })\n  authMessage: AuthMessageComponent | null = null;\n\n  @ContentChild(AuthRememberComponent)\n  authRemember: AuthRememberComponent | null = null;\n\n  @Output() submitted = new EventEmitter<User>();\n\n  constructor(private render: Renderer2) {}\n\n  ngOnInit(): void {\n    //  Note: I can access authMessage ViewChild here because I made it { static: true }\n    //\n    if (this.authMessage) {\n      this.authMessage.days = 30;\n    }\n    console.log(this.authMessage);\n  }\n\n  ngAfterViewInit(): void {\n    console.log(`Email: `, this.email);\n    // this.email?.nativeElement.setAttribute('placeholder', 'Enter your email');\n    // this.email?.nativeElement.classList.add('email');\n    // this.email?.nativeElement.focus();\n\n    this.render.setAttribute(\n      this.email?.nativeElement,\n      'placeholder',\n      'Enter your email'\n    );\n\n    this.render.addClass(this.email?.nativeElement, 'email');\n  }\n\n  ngAfterContentInit(): void {\n    if (this.authRemember) {\n      console.log(this.authRemember);\n      this.showMessage = this.authRemember.checked as Observable<boolean>;\n    }\n  }\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .email {\n        border-color: #9f72e6;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "render",
                        "type": "Renderer2"
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "render",
                        "type": "Renderer2",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 9,
            "duplicateName": "AuthFormComponent-9",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <ng-content select=\"h3\"></ng-content>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <ng-content select=\"app-auth-remember\"></ng-content>\n\n    <app-auth-message\n      [style.display]=\"(showMessage | async) ? 'inherit' : 'none'\"\n    >\n    </app-auth-message>\n\n    <ng-content select=\"button\"></ng-content>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-2dc87027cd0b2cc6ddede1c8b43bd5dd-10",
            "file": "src/app/sec11-dynamic-components-with-component-factory-resolver/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent {\n  @Output() submitted = new EventEmitter<User>();\n\n  constructor() {}\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "isDuplicate": true,
            "duplicateId": 10,
            "duplicateName": "AuthFormComponent-10",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <h3>Login</h3>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-eff3b54a2eaa37ae6716281c88c14075-11",
            "file": "src/app/sec14-destroying-dynamic-components/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Login'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent {\n  title = 'Login';\n\n  @Output() submitted = new EventEmitter<User>();\n\n  constructor() {}\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "isDuplicate": true,
            "duplicateId": 11,
            "duplicateName": "AuthFormComponent-11",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <h3>{{ title }}</h3>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-eff3b54a2eaa37ae6716281c88c14075-12",
            "file": "src/app/sec12-dynamic-component-and-input-data/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Login'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent {\n  title = 'Login';\n\n  @Output() submitted = new EventEmitter<User>();\n\n  constructor() {}\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "isDuplicate": true,
            "duplicateId": 12,
            "duplicateName": "AuthFormComponent-12",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <h3>{{ title }}</h3>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-eff3b54a2eaa37ae6716281c88c14075-13",
            "file": "src/app/sec15-dynamic-components-reordering/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Login'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent {\n  title = 'Login';\n\n  @Output() submitted = new EventEmitter<User>();\n\n  constructor() {}\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "isDuplicate": true,
            "duplicateId": 13,
            "duplicateName": "AuthFormComponent-13",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <h3>{{ title }}</h3>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthFormComponent",
            "id": "component-AuthFormComponent-eff3b54a2eaa37ae6716281c88c14075-14",
            "file": "src/app/sec13-dynamic-component-and-output-subscriptions/auth-form/auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "new EventEmitter<User>()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Login'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "value",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { User } from '../../shared/user';\n\n@Component({\n  selector: 'app-auth-form',\n  templateUrl: './auth-form.component.html',\n  styles: [],\n})\nexport class AuthFormComponent {\n  title = 'Login';\n\n  @Output() submitted = new EventEmitter<User>();\n\n  constructor() {}\n\n  onSubmit(value: User): void {\n    this.submitted.emit(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "isDuplicate": true,
            "duplicateId": 14,
            "duplicateName": "AuthFormComponent-14",
            "templateData": "<div>\n  <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\">\n    <h3>{{ title }}</h3>\n    <label for=\"email\">\n      Email Address\n      <input type=\"text\" name=\"email\" ngModel #email />\n    </label>\n    <label for=\"password \">\n      Password\n      <input type=\"text\" name=\"password\" ngModel />\n    </label>\n    <button type=\"submit\">Login</button>\n  </form>\n</div>\n"
        },
        {
            "name": "AuthMessageComponent",
            "id": "component-AuthMessageComponent-f57ed81113cb1907e346fb34ca43913f",
            "file": "src/app/shared/components/auth-message/auth-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "days",
                    "defaultValue": "7",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-message',\n  templateUrl: './auth-message.component.html',\n  styles: [],\n})\nexport class AuthMessageComponent {\n  days = 7;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div>You will be logged in for {{ days }}</div>\n"
        },
        {
            "name": "AuthRememberComponent",
            "id": "component-AuthRememberComponent-3bfa37b3c23effaf40ec5f4fb597c491",
            "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-remember",
            "styleUrls": [],
            "styles": [
                "\n      label {\n        display: block;\n      }\n    "
            ],
            "template": "<label>\n  <input\n    #rememberMe\n    type=\"checkbox\"\n    (change)=\"onChecked(rememberMe.checked)\"\n  />\n  Keep me logged in\n</label>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onChecked",
                    "args": [
                        {
                            "name": "checked",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-remember',\n  template: `\n    <label>\n      <input\n        #rememberMe\n        type=\"checkbox\"\n        (change)=\"onChecked(rememberMe.checked)\"\n      />\n      Keep me logged in\n    </label>\n  `,\n  styles: [\n    `\n      label {\n        display: block;\n      }\n    `,\n  ],\n})\nexport class AuthRememberComponent {\n  @Output() checked = new EventEmitter<boolean>();\n\n  onChecked(checked: boolean): void {\n    this.checked.emit(checked);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      label {\n        display: block;\n      }\n    \n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "DefaultChangeDetectionComponent",
            "id": "component-DefaultChangeDetectionComponent-4188360dc199b6289ca4259e481be51f",
            "file": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/default-change-detection.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-default-change-detection",
            "styleUrls": [
                "./styles.scss"
            ],
            "styles": [],
            "template": "<div class=\"default-example\">\n  <h2>Default</h2>\n  <h4>{{ user?.name }}</h4>\n  <h5>{{ user?.age }} years old</h5>\n  {{ user?.location }} <br />\n  {{ user?.email }} <br />\n\n  <button (click)=\"update()\">Internal Update</button>\n  <p>* should update</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 21,
                    "type": "User | null"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "update",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-default-change-detection',\n  template: `\n    <div class=\"default-example\">\n      <h2>Default</h2>\n      <h4>{{ user?.name }}</h4>\n      <h5>{{ user?.age }} years old</h5>\n      {{ user?.location }} <br />\n      {{ user?.email }} <br />\n\n      <button (click)=\"update()\">Internal Update</button>\n      <p>* should update</p>\n    </div>\n  `,\n  styleUrls: ['./styles.scss'],\n})\nexport class DefaultChangeDetectionComponent {\n  @Input() user: User | null = null;\n\n  update(): void {\n    if (this.user) {\n      this.user.name = 'Jim Bob';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\r\n  box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  font: 300 15px/1.4 -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica,\r\n    Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n}\r\n\r\n// html,\r\n// body {\r\n//   height: 100%;\r\n//   margin: 0;\r\n//   padding: 0;\r\n//   background: #fff;\r\n//   -webkit-font-smoothing: antialiased;\r\n//   color: #545e6f;\r\n//}\r\n\r\nimg {\r\n  vertical-align: bottom;\r\n}\r\nimg a {\r\n  border: 0;\r\n}\r\nul,\r\nol {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\na {\r\n  color: #9f72e6;\r\n  text-decoration: none;\r\n}\r\ninput,\r\nbutton {\r\n  outline: 0;\r\n}\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"number\"],\r\ninput[type=\"password\"] {\r\n  border: none;\r\n  background: #fff;\r\n  font-size: 13px;\r\n  padding: 6px 30px 6px 10px;\r\n  border-radius: 1px;\r\n  border: 1px solid #ccc;\r\n}\r\nlabel {\r\n  display: block;\r\n}\r\nbutton {\r\n  cursor: pointer;\r\n  background: #9f72e6;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  color: #fff;\r\n}\r\n\r\n// Added\r\n.padded-button {\r\n  margin: 0 15px;\r\n}\r\n\r\nbutton {\r\n  margin-right: 5px;\r\n}\r\n\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  background: #b598e4;\r\n}\r\np {\r\n  margin: 5px 0;\r\n}\r\n\r\nbody {\r\n  padding: 50px;\r\n}\r\n\r\nh2 {\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  margin: 0;\r\n}\r\n\r\nh3 {\r\n  font-size: 22px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n}\r\nh4 {\r\n  font-size: 18px;\r\n  font-weight: 300;\r\n  margin: 0;\r\n}\r\n.app-root {\r\n  display: inline-block;\r\n  background-color: #ffffff;\r\n  border-radius: 2px;\r\n  border: 1px solid #dce5f2;\r\n  box-shadow: 0 1px 4px rgba(53, 60, 72, 0.1);\r\n  padding: 30px;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 20px;\r\n}\r\nh3 {\r\n  margin-bottom: 20px;\r\n}\r\nauth-message {\r\n  margin-bottom: 20px;\r\n}\r\n.users {\r\n  margin-top: 20px;\r\n  display: flex;\r\n}\r\n.default-example {\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n.default-example,\r\n.on-push-example {\r\n  padding: 10px 15px;\r\n}\r\n",
                    "styleUrl": "./styles.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "DynamicAuthFormComponent",
            "id": "component-DynamicAuthFormComponent-18cc7a109cea3a3642ef0780afddebcd",
            "file": "src/app/sec11-dynamic-components-with-component-factory-resolver/dynamic-auth-form/dynamic-auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-auth-form",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <div #entry></div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entry",
                    "defaultValue": "null",
                    "type": "ViewContainerRef | null",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'entry', {read: ViewContainerRef, static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loginUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { User } from '../../shared/user';\nimport { AuthFormComponent } from '../auth-form/auth-form.component';\n\n//  https://labs.thisdot.co/blog/loading-components-dynamically-in-angular-9-with-ivy\n\n@Component({\n  selector: 'app-dynamic-auth-form',\n  template: `\n    <div>\n      <div #entry></div>\n    </div>\n  `,\n  styles: [],\n})\nexport class DynamicAuthFormComponent implements OnInit {\n  @ViewChild('entry', { read: ViewContainerRef, static: true })\n  entry: ViewContainerRef | null = null;\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    const authFormFactory = this.resolver.resolveComponentFactory(\n      AuthFormComponent\n    );\n    this.entry?.createComponent(authFormFactory);\n  }\n\n  loginUser(user: User): void {\n    console.log('Login: ', user);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "DynamicAuthFormComponent",
            "id": "component-DynamicAuthFormComponent-99edadc34a0bec0450d7f292257d5b67-1",
            "file": "src/app/sec12-dynamic-component-and-input-data/dynamic-auth-form/dynamic-auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-auth-form",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <div #entry></div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entry",
                    "defaultValue": "null",
                    "type": "ViewContainerRef | null",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'entry', {read: ViewContainerRef, static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loginUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { User } from '../../shared/user';\nimport { AuthFormComponent } from '../auth-form/auth-form.component';\n\n//  https://labs.thisdot.co/blog/loading-components-dynamically-in-angular-9-with-ivy\n\n@Component({\n  selector: 'app-dynamic-auth-form',\n  template: `\n    <div>\n      <div #entry></div>\n    </div>\n  `,\n  styles: [],\n})\nexport class DynamicAuthFormComponent implements OnInit {\n  @ViewChild('entry', { read: ViewContainerRef, static: true })\n  entry: ViewContainerRef | null = null;\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    const authFormFactory = this.resolver.resolveComponentFactory(\n      AuthFormComponent\n    );\n    const component = this.entry?.createComponent(authFormFactory);\n    console.log('===> Component: ', component?.instance);\n    if (component?.instance) {\n      component.instance.title = 'New Login';\n    }\n  }\n\n  loginUser(user: User): void {\n    console.log('Login: ', user);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DynamicAuthFormComponent-1"
        },
        {
            "name": "DynamicAuthFormComponent",
            "id": "component-DynamicAuthFormComponent-21b0bdae4d2b47d526a1f3dcaff152f5-2",
            "file": "src/app/sec14-destroying-dynamic-components/dynamic-auth-form/dynamic-auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-auth-form",
            "styleUrls": [],
            "styles": [],
            "template": "<button class=\"padded-button\" (click)=\"destroyComponent()\">\n  Destroy Component\n</button>\n<div>\n  <div #entry></div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "null",
                    "type": "ComponentRef<AuthFormComponent> | null",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "entry",
                    "defaultValue": "null",
                    "type": "ViewContainerRef | null",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'entry', {read: ViewContainerRef, static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "destroyComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { AuthFormComponent } from '../auth-form/auth-form.component';\n\n//  https://labs.thisdot.co/blog/loading-components-dynamically-in-angular-9-with-ivy\n\n@Component({\n  selector: 'app-dynamic-auth-form',\n  template: `\n    <button class=\"padded-button\" (click)=\"destroyComponent()\">\n      Destroy Component\n    </button>\n    <div>\n      <div #entry></div>\n    </div>\n  `,\n  styles: [],\n})\nexport class DynamicAuthFormComponent implements OnInit {\n  @ViewChild('entry', { read: ViewContainerRef, static: true })\n  entry: ViewContainerRef | null = null;\n\n  component: ComponentRef<AuthFormComponent> | null = null;\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    const authFormFactory = this.resolver.resolveComponentFactory(\n      AuthFormComponent\n    );\n\n    this.component = this.entry\n      ? this.entry.createComponent(authFormFactory)\n      : null;\n\n    console.log('===> Component: ', this.component?.instance);\n\n    if (this.component?.instance) {\n      this.component.instance.title = 'New Login';\n\n      this.component.instance.submitted.subscribe((value) =>\n        console.log('===> Submitted: ', value)\n      );\n    }\n  }\n\n  destroyComponent(): void {\n    this.component?.destroy();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "DynamicAuthFormComponent-2"
        },
        {
            "name": "DynamicAuthFormComponent",
            "id": "component-DynamicAuthFormComponent-c69958c4607b390f5a5655a1f9c35e1c-3",
            "file": "src/app/sec15-dynamic-components-reordering/dynamic-auth-form/dynamic-auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-auth-form",
            "styleUrls": [],
            "styles": [],
            "template": "<button class=\"padded-button\" (click)=\"destroyComponent()\">\n  Destroy\n</button>\n<button class=\"padded-button\" (click)=\"moveComponent()\">\n  Move\n</button>\n<div>\n  <div #entry></div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "component",
                    "defaultValue": "null",
                    "type": "ComponentRef<AuthFormComponent> | null",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "entry",
                    "defaultValue": "null",
                    "type": "ViewContainerRef | null",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'entry', {read: ViewContainerRef, static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "destroyComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58
                },
                {
                    "name": "moveComponent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { AuthFormComponent } from '../auth-form/auth-form.component';\n\n//  https://labs.thisdot.co/blog/loading-components-dynamically-in-angular-9-with-ivy\n\n@Component({\n  selector: 'app-dynamic-auth-form',\n  template: `\n    <button class=\"padded-button\" (click)=\"destroyComponent()\">\n      Destroy\n    </button>\n    <button class=\"padded-button\" (click)=\"moveComponent()\">\n      Move\n    </button>\n    <div>\n      <div #entry></div>\n    </div>\n  `,\n  styles: [],\n})\nexport class DynamicAuthFormComponent implements OnInit {\n  @ViewChild('entry', { read: ViewContainerRef, static: true })\n  entry: ViewContainerRef | null = null;\n\n  component: ComponentRef<AuthFormComponent> | null = null;\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    const authFormFactory = this.resolver.resolveComponentFactory(\n      AuthFormComponent\n    );\n\n    this.entry?.createComponent(authFormFactory); // Default index is -1 and is added as the last entry\n\n    this.component = this.entry\n      ? this.entry.createComponent(authFormFactory, 0)\n      : null;\n\n    console.log('===> Component: ', this.component?.instance);\n\n    if (this.component?.instance) {\n      this.component.instance.title = 'New Login';\n\n      this.component.instance.submitted.subscribe((value) =>\n        console.log('===> Submitted: ', value)\n      );\n    }\n  }\n\n  destroyComponent(): void {\n    this.component?.destroy();\n  }\n\n  moveComponent(): void {\n    if (this.entry && this.component) {\n      this.entry.move(this.component.hostView, 1);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "DynamicAuthFormComponent-3"
        },
        {
            "name": "DynamicAuthFormComponent",
            "id": "component-DynamicAuthFormComponent-1855f9a72d2d79e70ca8d731e41ea312-4",
            "file": "src/app/sec13-dynamic-component-and-output-subscriptions/dynamic-auth-form/dynamic-auth-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-auth-form",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <div #entry></div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entry",
                    "defaultValue": "null",
                    "type": "ViewContainerRef | null",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'entry', {read: ViewContainerRef, static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { AuthFormComponent } from '../auth-form/auth-form.component';\n\n//  https://labs.thisdot.co/blog/loading-components-dynamically-in-angular-9-with-ivy\n\n@Component({\n  selector: 'app-dynamic-auth-form',\n  template: `\n    <div>\n      <div #entry></div>\n    </div>\n  `,\n  styles: [],\n})\nexport class DynamicAuthFormComponent implements OnInit {\n  @ViewChild('entry', { read: ViewContainerRef, static: true })\n  entry: ViewContainerRef | null = null;\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    const authFormFactory = this.resolver.resolveComponentFactory(\n      AuthFormComponent\n    );\n    const component = this.entry?.createComponent(authFormFactory);\n    console.log('===> Component: ', component?.instance);\n    if (component?.instance) {\n      component.instance.title = 'New Login';\n\n      component.instance.submitted.subscribe((value) =>\n        console.log('===> Submitted: ', value)\n      );\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "DynamicAuthFormComponent-4"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-676d6d23410a928e1f55895adc1e534f",
            "file": "src/app/sec18-dynamic-ng-template-rendering-with-ngtemplateoutlet/example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>\n  <ng-template #tmpl>\n    Todd Motto : England, UK\n  </ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  template: `\n    <div>\n      <ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>\n      <ng-template #tmpl>\n        Todd Motto : England, UK\n      </ng-template>\n    </div>\n  `,\n  styles: [],\n})\nexport class ExampleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-39f3986f9f1beabaafc83b767ab71763-1",
            "file": "src/app/sec19-using-ngtemplateoutlet-with-context/example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <ng-container *ngTemplateOutlet=\"tmpl; context: ctx\"></ng-container>\n\n  <ng-template #tmpl let-name let-location=\"location\">\n    {{ name }} : {{ location }}\n  </ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ctx",
                    "defaultValue": "{\n    $implicit: 'Todd Motto',\n    location: 'England, UK',\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  template: `\n    <div>\n      <ng-container *ngTemplateOutlet=\"tmpl; context: ctx\"></ng-container>\n\n      <ng-template #tmpl let-name let-location=\"location\">\n        {{ name }} : {{ location }}\n      </ng-template>\n    </div>\n  `,\n  styles: [],\n})\nexport class ExampleComponent implements OnInit {\n  ctx = {\n    $implicit: 'Todd Motto',\n    location: 'England, UK',\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ExampleComponent-1"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-04501436ab4442ecbb4587371247a69c-2",
            "file": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [
                "./styles.scss"
            ],
            "styles": [],
            "template": "<div>\n  <button (click)=\"addProp()\">Add Property</button>\n  <button (click)=\"changeUser()\">Change User Object</button>\n  <button (click)=\"changeName()\">Change Name Property</button>\n  <div class=\"users\">\n    <app-default-change-detection\n      [user]=\"user\"\n    ></app-default-change-detection>\n    <app-onpush-change-detection\n      [user]=\"user\"\n    ></app-onpush-change-detection>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "{\n    name: 'Mark Hop',\n    age: 44,\n    location: 'California',\n  } as User",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "addProp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "changeName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35
                },
                {
                    "name": "changeUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-example',\n  template: `\n    <div>\n      <button (click)=\"addProp()\">Add Property</button>\n      <button (click)=\"changeUser()\">Change User Object</button>\n      <button (click)=\"changeName()\">Change Name Property</button>\n      <div class=\"users\">\n        <app-default-change-detection\n          [user]=\"user\"\n        ></app-default-change-detection>\n        <app-onpush-change-detection\n          [user]=\"user\"\n        ></app-onpush-change-detection>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./styles.scss'],\n})\nexport class ExampleComponent {\n  user = {\n    name: 'Mark Hop',\n    age: 44,\n    location: 'California',\n  } as User;\n\n  addProp(): void {\n    //  Mutating for example. We want to be immutable in real life scenarios\n    this.user.email = 'blink@blink-182.net';\n  }\n\n  changeName(): void {\n    //  Mutating for example. We want to be immutable in real life scenarios\n    this.user.name = 'Travis Barker';\n  }\n\n  changeUser(): void {\n    this.user = {\n      name: 'Tom Daily',\n      age: 41,\n      location: 'California',\n    } as User;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\r\n  box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  font: 300 15px/1.4 -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica,\r\n    Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n}\r\n\r\n// html,\r\n// body {\r\n//   height: 100%;\r\n//   margin: 0;\r\n//   padding: 0;\r\n//   background: #fff;\r\n//   -webkit-font-smoothing: antialiased;\r\n//   color: #545e6f;\r\n//}\r\n\r\nimg {\r\n  vertical-align: bottom;\r\n}\r\nimg a {\r\n  border: 0;\r\n}\r\nul,\r\nol {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\na {\r\n  color: #9f72e6;\r\n  text-decoration: none;\r\n}\r\ninput,\r\nbutton {\r\n  outline: 0;\r\n}\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"number\"],\r\ninput[type=\"password\"] {\r\n  border: none;\r\n  background: #fff;\r\n  font-size: 13px;\r\n  padding: 6px 30px 6px 10px;\r\n  border-radius: 1px;\r\n  border: 1px solid #ccc;\r\n}\r\nlabel {\r\n  display: block;\r\n}\r\nbutton {\r\n  cursor: pointer;\r\n  background: #9f72e6;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  color: #fff;\r\n}\r\n\r\n// Added\r\n.padded-button {\r\n  margin: 0 15px;\r\n}\r\n\r\nbutton {\r\n  margin-right: 5px;\r\n}\r\n\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  background: #b598e4;\r\n}\r\np {\r\n  margin: 5px 0;\r\n}\r\n\r\nbody {\r\n  padding: 50px;\r\n}\r\n\r\nh2 {\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  margin: 0;\r\n}\r\n\r\nh3 {\r\n  font-size: 22px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n}\r\nh4 {\r\n  font-size: 18px;\r\n  font-weight: 300;\r\n  margin: 0;\r\n}\r\n.app-root {\r\n  display: inline-block;\r\n  background-color: #ffffff;\r\n  border-radius: 2px;\r\n  border: 1px solid #dce5f2;\r\n  box-shadow: 0 1px 4px rgba(53, 60, 72, 0.1);\r\n  padding: 30px;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 20px;\r\n}\r\nh3 {\r\n  margin-bottom: 20px;\r\n}\r\nauth-message {\r\n  margin-bottom: 20px;\r\n}\r\n.users {\r\n  margin-top: 20px;\r\n  display: flex;\r\n}\r\n.default-example {\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n.default-example,\r\n.on-push-example {\r\n  padding: 10px 15px;\r\n}\r\n",
                    "styleUrl": "./styles.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "ExampleComponent-2"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-39c22c6d1332b822641edaf1f097dd03-3",
            "file": "src/app/sec25-export-as/example.component.ts",
            "encapsulation": [
                "ViewEncapsulation.ShadowDom"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [
                "./example.component.scss"
            ],
            "styles": [],
            "template": "<!-- <label appTooltip=\"3 digits, back of your card\" #myTooltip=\"tooltip\">\n  Enter your security code\n  <span (mouseover)=\"myTooltip.show()\" (mouseout)=\"myTooltip.hide()\">\n    (?)\n  </span>\n  <input type=\"text\" />\n</label>\n<div>Test Test</div> -->\n\n<ng-container *ngTemplateOutlet=\"layoutTemplate\"></ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "layoutTemplate",
                    "defaultValue": "null",
                    "type": "TemplateRef<any> | null",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "TemplateRef"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  OnInit,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  template: `\n    <!-- <label appTooltip=\"3 digits, back of your card\" #myTooltip=\"tooltip\">\n      Enter your security code\n      <span (mouseover)=\"myTooltip.show()\" (mouseout)=\"myTooltip.hide()\">\n        (?)\n      </span>\n      <input type=\"text\" />\n    </label>\n    <div>Test Test</div> -->\n\n    <ng-container *ngTemplateOutlet=\"layoutTemplate\"></ng-container>\n  `,\n  styleUrls: ['./example.component.scss'],\n  encapsulation: ViewEncapsulation.ShadowDom,\n})\nexport class ExampleComponent implements OnInit, AfterContentInit {\n  //  @Input() exampleRef: TemplateRef<unknown> | null = null;\n\n  @ContentChild(TemplateRef) layoutTemplate: TemplateRef<any> | null = null;\n\n  // @Input() layoutTemplate: TemplateRef<any> | null = null;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngAfterContentInit(): void {\n    console.log('layoutTemplate: ', this.layoutTemplate);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles.scss\";\r\n\r\n.tooltip-container {\r\n  position: relative;\r\n}\r\n\r\n.tooltip {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: #fff;\r\n  line-height: 1;\r\n  font-size: 14px;\r\n  padding: 5px 7px;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 100%;\r\n  white-space: nowrap;\r\n  display: none;\r\n}\r\n\r\n.tooltip--active {\r\n  display: block;\r\n}\r\n\r\n.tooltip:before {\r\n  position: absolute;\r\n  content: \" \";\r\n  top: 50%;\r\n  margin-top: -5px;\r\n  left: -5px;\r\n  width: 0;\r\n  height: 0;\r\n  border-style: solid;\r\n  border-width: 5px 5px 5px 0;\r\n  border-color: transparent rgba(0, 0, 0, 0.7) transparent transparent;\r\n  display: block;\r\n}\r\n\r\nspan {\r\n  color: #9f72e6;\r\n  text-decoration: underline;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n",
                    "styleUrl": "./example.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 30
            },
            "implements": [
                "OnInit",
                "AfterContentInit"
            ],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "ExampleComponent-3"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-89fd74cf93a629ecf5064a3d694fab97-4",
            "file": "src/app/sec16-dynamic-ng-template-rendering-with-view-container-ref/example/example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [],
            "styles": [
                "\n      div {\n        padding: 0 10px;\n      }\n    "
            ],
            "template": "<div>\n  <div #entry></div>\n  <ng-template #tmpl>\n    Text inside of ng-template, Inside of &lt;div&gt; with #entry template\n    reference variable\n  </ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entry",
                    "defaultValue": "null",
                    "type": "ViewContainerRef | null",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'entry', {read: ViewContainerRef, static: true}"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "defaultValue": "null",
                    "type": "TemplateRef<unknown> | null",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tmpl', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\n//  https://labs.thisdot.co/blog/loading-components-dynamically-in-angular-9-with-ivy\n\n@Component({\n  selector: 'app-example',\n  template: `\n    <div>\n      <div #entry></div>\n      <ng-template #tmpl>\n        Text inside of ng-template, Inside of &lt;div&gt; with #entry template\n        reference variable\n      </ng-template>\n    </div>\n  `,\n  styles: [\n    `\n      div {\n        padding: 0 10px;\n      }\n    `,\n  ],\n})\nexport class ExampleComponent implements OnInit {\n  @ViewChild('entry', { read: ViewContainerRef, static: true })\n  entry: ViewContainerRef | null = null;\n\n  @ViewChild('tmpl', { static: true }) tmpl: TemplateRef<unknown> | null = null;\n\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  ngOnInit(): void {\n    console.log('Entry: ', this.entry);\n    console.log('Template Ref Variable: ', this.tmpl);\n\n    if (this.tmpl) {\n      this.entry?.createEmbeddedView(this.tmpl);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      div {\n        padding: 0 10px;\n      }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver"
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 4,
            "duplicateName": "ExampleComponent-4"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-d2dc7f95350e4cebfa1bcf905acd4140-5",
            "file": "src/app/sec17-passing-context-to-dynamic-ng-template/example/example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <div #entry>\n    <ng-template #tmpl let-name let-location=\"location\">\n      {{ name }} : {{ location }}\n    </ng-template>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "entry",
                    "defaultValue": "null",
                    "type": "ViewContainerRef | null",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'entry', {read: ViewContainerRef}"
                        }
                    ]
                },
                {
                    "name": "tmpl",
                    "defaultValue": "null",
                    "type": "TemplateRef<unknown> | null",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tmpl'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  template: `\n    <div>\n      <div #entry>\n        <ng-template #tmpl let-name let-location=\"location\">\n          {{ name }} : {{ location }}\n        </ng-template>\n      </div>\n    </div>\n  `,\n  styles: [],\n})\nexport class ExampleComponent implements AfterViewInit {\n  @ViewChild('tmpl') tmpl: TemplateRef<unknown> | null = null;\n\n  @ViewChild('entry', { read: ViewContainerRef })\n  entry: ViewContainerRef | null = null;\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    if (this.tmpl) {\n      this.entry?.createEmbeddedView(this.tmpl, {\n        $implicit: 'Motto Todd',\n        location: 'UK, England',\n      });\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "AfterViewInit"
            ],
            "isDuplicate": true,
            "duplicateId": 5,
            "duplicateName": "ExampleComponent-5"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-c3fe8c52232653620363047fd35b8fd4-6",
            "file": "src/app/sec26-custom-structural-directive/example/example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [
                "./example.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./example.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[\n    {\n      name: 'Mark Hop',\n      age: 44,\n      location: 'California',\n    },\n    {\n      name: 'Tom Delaney',\n      age: 41,\n      location: 'California',\n    },\n    {\n      name: 'Travis Barker',\n      age: 41,\n      location: 'California',\n    },\n  ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.scss'],\n})\nexport class ExampleComponent {\n  items = [\n    {\n      name: 'Mark Hop',\n      age: 44,\n      location: 'California',\n    },\n    {\n      name: 'Tom Delaney',\n      age: 41,\n      location: 'California',\n    },\n    {\n      name: 'Travis Barker',\n      age: 41,\n      location: 'California',\n    },\n  ];\n\n  constructor() {\n    setTimeout(() => {\n      this.items = [\n        ...this.items,\n        { name: 'Matt Sketch', age: 40, location: 'California' },\n      ];\n    }, 2000);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./example.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 25
            },
            "isDuplicate": true,
            "duplicateId": 6,
            "duplicateName": "ExampleComponent-6",
            "templateData": "<div>\n  <ul>\n    <!-- '*' is essentially a shortcut for 'template' -->\n    <li *ngFor=\"let item of items; let i = index\">\n      {{ i }} Member: {{ item.name | json }}\n    </li>\n\n    <br />\n\n    <!-- Expanded/desuguared template -->\n    <ng-template ngFor [ngForOf]=\"items\" let-item let-i=\"index\">\n      <li>{{ i }} Member: {{ item.name | json }}</li>\n    </ng-template>\n  </ul>\n</div>\n\n<br />\n<hr />\n\n<div>\n  <ul>\n    <!-- '*' is essentially a shortcut for 'template' -->\n    <li *appMyFor=\"let item of items; let i = index\">\n      {{ i }} Member: {{ item.name | json }}\n    </li>\n\n    <br />\n\n    <!-- Expanded/desuguared template -->\n    <ng-template appMyFor [appMyForOf]=\"items\" let-item let-i=\"index\">\n      <li>{{ i }} Member: {{ item.name | json }}</li>\n    </ng-template>\n  </ul>\n</div>\n"
        },
        {
            "name": "ExampleOneComponent",
            "id": "component-ExampleOneComponent-d1a652e6a5a700549dc4cfafbec94407",
            "file": "src/app/sec20-viewencapsulation-and-shadow-dom/example-one.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-one",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  example-one works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example-one',\n  template: `\n    <p>\n      example-one works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ExampleOneComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExampleThreeComponent",
            "id": "component-ExampleThreeComponent-f4b80a3905b0396cb95138a64ff0fa0b",
            "file": "src/app/sec20-viewencapsulation-and-shadow-dom/example-three.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-three",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  example-three works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example-three',\n  template: `\n    <p>\n      example-three works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ExampleThreeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExampleTwoComponent",
            "id": "component-ExampleTwoComponent-a39b8d066e8618502476ac13dabb9957",
            "file": "src/app/sec20-viewencapsulation-and-shadow-dom/example-two.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-two",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  example-two works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example-two',\n  template: `\n    <p>\n      example-two works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ExampleTwoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "OnpushChangeDetectionComponent",
            "id": "component-OnpushChangeDetectionComponent-4cc8796b6e5abb06a739a4def481f9e6",
            "file": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/onpush-change-detection.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-onpush-change-detection",
            "styleUrls": [
                "./styles.scss"
            ],
            "styles": [],
            "template": "<div class=\"on-push-example\">\n  <h2>OnPush</h2>\n  <h4>{{ user?.name }}</h4>\n  <h5>{{ user?.age }} years old</h5>\n  {{ user?.location }} <br />\n  {{ user?.email }} <br />\n\n  <button (click)=\"update()\">Internal Update</button>\n  <p>* should not update</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 22,
                    "type": "User | null"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "update",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-onpush-change-detection',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"on-push-example\">\n      <h2>OnPush</h2>\n      <h4>{{ user?.name }}</h4>\n      <h5>{{ user?.age }} years old</h5>\n      {{ user?.location }} <br />\n      {{ user?.email }} <br />\n\n      <button (click)=\"update()\">Internal Update</button>\n      <p>* should not update</p>\n    </div>\n  `,\n  styleUrls: ['./styles.scss'],\n})\nexport class OnpushChangeDetectionComponent {\n  @Input() user: User | null = null;\n\n  update(): void {\n    if (this.user) {\n      this.user.name = 'Jim Bob';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "* {\r\n  box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  font: 300 15px/1.4 -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica,\r\n    Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n}\r\n\r\n// html,\r\n// body {\r\n//   height: 100%;\r\n//   margin: 0;\r\n//   padding: 0;\r\n//   background: #fff;\r\n//   -webkit-font-smoothing: antialiased;\r\n//   color: #545e6f;\r\n//}\r\n\r\nimg {\r\n  vertical-align: bottom;\r\n}\r\nimg a {\r\n  border: 0;\r\n}\r\nul,\r\nol {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\na {\r\n  color: #9f72e6;\r\n  text-decoration: none;\r\n}\r\ninput,\r\nbutton {\r\n  outline: 0;\r\n}\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"number\"],\r\ninput[type=\"password\"] {\r\n  border: none;\r\n  background: #fff;\r\n  font-size: 13px;\r\n  padding: 6px 30px 6px 10px;\r\n  border-radius: 1px;\r\n  border: 1px solid #ccc;\r\n}\r\nlabel {\r\n  display: block;\r\n}\r\nbutton {\r\n  cursor: pointer;\r\n  background: #9f72e6;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  color: #fff;\r\n}\r\n\r\n// Added\r\n.padded-button {\r\n  margin: 0 15px;\r\n}\r\n\r\nbutton {\r\n  margin-right: 5px;\r\n}\r\n\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  background: #b598e4;\r\n}\r\np {\r\n  margin: 5px 0;\r\n}\r\n\r\nbody {\r\n  padding: 50px;\r\n}\r\n\r\nh2 {\r\n  font-size: 26px;\r\n  font-weight: 500;\r\n  margin: 0;\r\n}\r\n\r\nh3 {\r\n  font-size: 22px;\r\n  font-weight: 400;\r\n  margin: 0;\r\n}\r\nh4 {\r\n  font-size: 18px;\r\n  font-weight: 300;\r\n  margin: 0;\r\n}\r\n.app-root {\r\n  display: inline-block;\r\n  background-color: #ffffff;\r\n  border-radius: 2px;\r\n  border: 1px solid #dce5f2;\r\n  box-shadow: 0 1px 4px rgba(53, 60, 72, 0.1);\r\n  padding: 30px;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 20px;\r\n}\r\nh3 {\r\n  margin-bottom: 20px;\r\n}\r\nauth-message {\r\n  margin-bottom: 20px;\r\n}\r\n.users {\r\n  margin-top: 20px;\r\n  display: flex;\r\n}\r\n.default-example {\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n.default-example,\r\n.on-push-example {\r\n  padding: 10px 15px;\r\n}\r\n",
                    "styleUrl": "./styles.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-cca1a8911321fa17756ce90c90de65cc",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TestDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "Sec25ExportAsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec01ContentProjectionModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec02ContentProjectionSlotsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec03ProjectingAndBindingToComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec04ContentChildAndNgAfterContentInitModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec05ContentChildrenAndQueryListModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec06ViewChildAndNgAfterViewInitModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec07ViewChildrenAndQueryLists",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec08ViewChildAndTemplateRef",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec09ElementRefAndNativeElement",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec10PlatformAgnosticRendererModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec11DynamicComponentsWithComponentFactoryResolverModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DynamicAuthFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DynamicAuthFormComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec12DynamicComponentAndInputDataModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec13DynamicComponentAndOutputSubscriptionsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec14DestroyingDynamicComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec15DynamicComponentsReorderingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec16DynamicNgTemplateRenderingWithViewContainerRefModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec17PassingContextToDynamicNgTemplateModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec18DynamicNgTemplateRenderingWithNgtemplateoutletModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec19UsingNgtemplateoutletWithContextModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec20ViewencapsulationAndShadowDomModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleOneComponent"
                        },
                        {
                            "name": "ExampleThreeComponent"
                        },
                        {
                            "name": "ExampleTwoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec21ChangedetectionstrategyOnpushAndImmutabilityModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DefaultChangeDetectionComponent"
                        },
                        {
                            "name": "ExampleComponent"
                        },
                        {
                            "name": "OnpushChangeDetectionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec22CustomAttributeDirectiveModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreditCardDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec23HostListenersModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreditCardDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec24HostBindingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CreditCardDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec25ExportAsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleComponent"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "TooltipDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec26CustomStructuralDirectiveModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleComponent"
                        },
                        {
                            "name": "MyForDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MyForDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec27CustomPipesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec28PipesProvidersModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Sec30FormcontrolFormgroupModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthMessageComponent"
                        },
                        {
                            "name": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthMessageComponent"
                        },
                        {
                            "name": "AuthRememberComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CreateAccount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec01-content-projection/auth-form/auth-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  template: `\r\n    <div class=\"app-root\">\r\n      <div>\r\n        <app-auth-form>\r\n            <h3>Create Account</h3>\r\n        </app-auth-form>\r\n\r\n        <div class=\"verticalLine\"></div>\r\n\r\n        <app-auth-form>\r\n            <h3>Login</h3>\r\n        </app-auth-form>\r\n      </div>\r\n    </div>\r\n  `,\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec18-dynamic-ng-template-rendering-with-ngtemplateoutlet/example.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec19-using-ngtemplateoutlet-with-context/example.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/example.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec16-dynamic-ng-template-rendering-with-view-container-ref/example/example.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-example></app-example>\r\n      </div>\r\n    `,\r\n})"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec17-passing-context-to-dynamic-ng-template/example/example.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec02-content-projection-slots/auth-form/auth-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  template: `\r\n    <div class=\"app-root\">\r\n      <div>\r\n        <app-auth-form>\r\n          <h3>Create Account</h3>\r\n          <button type=\"submit\">\r\n            Join us\r\n          </button>\r\n        </app-auth-form>\r\n\r\n        <div class=\"verticalLine\"></div>\r\n\r\n        <app-auth-form>\r\n          <h3>Login</h3>\r\n          <button type=\"submit\">\r\n            Login\r\n          </button>\r\n        </app-auth-form>\r\n      <div>\r\n    </div>\r\n  `,\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec04-content-child-and-ng-after-content-init/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\n  template: `\n    <div class=\"app-root\">\n      <div>\n        <app-auth-form>\n          <h3>Create Account</h3>\n          <button type=\"submit\">\n            Join us\n          </button>\n        </app-auth-form>\n\n        <div class=\"verticalLine\"></div>\n\n        <app-auth-form (submitted)=\"onSubmit($event)\">\n          <h3>Login</h3>\n          <app-auth-remember\n            (checked)=\"onChecked($event)\">\n          </app-auth-remember>\n          <button type=\"submit\">\n            Login\n          </button>\n        </app-auth-form>\n      <div>\n    </div>\n  `,\n  props: {\n    onChecked: action('onChecked'),\n    onSubmit: (e: User) => {\n      console.log('Login', e);\n    },\n  },\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec07-view-children-and-query-lists/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec05-content-children-and-query-list/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec06-view-child-and-ng-after-view-init/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec09-element-ref-and-native-element/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec08-view-child-and-template-ref/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec10-platform-agnostic-renderer/auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec11-dynamic-components-with-component-factory-resolver/dynamic-auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec12-dynamic-component-and-input-data/dynamic-auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec14-destroying-dynamic-components/dynamic-auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec15-dynamic-components-reordering/dynamic-auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec13-dynamic-component-and-output-subscriptions/dynamic-auth-form/auth-form.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/auth-message/auth-message.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec01-content-projection/auth-form/auth-form.stories.ts",
                "type": "Story<AuthFormComponent>",
                "defaultValue": "(args: AuthFormComponent) => ({\r\n  component: AuthFormComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec02-content-projection-slots/auth-form/auth-form.stories.ts",
                "type": "Story<AuthFormComponent>",
                "defaultValue": "(args: AuthFormComponent) => ({\r\n  component: AuthFormComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "Story<AuthRememberComponent>",
                "defaultValue": "(\r\n  args: AuthRememberComponent\r\n) => ({\r\n  component: AuthRememberComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/auth-message/auth-message.stories.ts",
                "type": "Story<AuthMessageComponent>",
                "defaultValue": "(args: AuthMessageComponent) => ({\r\n  component: AuthMessageComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "TemplateTwo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "Story<AuthRememberComponent>",
                "defaultValue": "(\r\n  args: AuthRememberComponent\r\n) => ({\r\n  template: `\r\n    <app-auth-remember\"></app-auth-remember>\r\n  `,\r\n  props: args,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec20-viewencapsulation-and-shadow-dom/example-one.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n   <div>Story Works!</div>\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec22-custom-attribute-directive/custom-attribute-directive.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n    <input\r\n      appCreditCard\r\n      placeholder=\"Input example\"\r\n    >\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec24-host-binding/custom-attribute-directive.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n    <input\r\n      appCreditCard\r\n      placeholder=\"Input example\"\r\n    >\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec23-host-listeners/custom-attribute-directive.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n    <input\r\n      appCreditCard\r\n      placeholder=\"Input example\"\r\n    >\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec25-export-as/example.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  //  component: ExampleComponent,\r\n  template: `\r\n    <app-example class=\"app-root\">\r\n    <ng-template #testTemplate>\r\n      <label appTooltip=\"3 digits, back of your card\" #myTooltip=\"tooltip\">\r\n        Enter your security code\r\n        <span (mouseover)=\"myTooltip.show()\" (mouseout)=\"myTooltip.hide()\">\r\n          (?)\r\n        </span>\r\n        <input type=\"text\" />\r\n      </label>\r\n    </ng-template>\r\n    </app-example>\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec27-custom-pipes/custom-pipes.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n   <div>Story Works!</div>\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec30-formcontrol-formgroup/formcontrol-formgroup.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n   <div>Story Works!</div>\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n   <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n`,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n  },\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/sec26-custom-structural-directive/example/example.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n   <app-example></app-example>\r\n`,\r\n})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/auth-message/auth-message.stories.ts",
                "type": "Story",
                "defaultValue": "() => ({\r\n  template: `\r\n   <app-auth-message></app-auth-message>\r\n`,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/sec01-content-projection/auth-form/auth-form.stories.ts": [
                {
                    "name": "CreateAccount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec01-content-projection/auth-form/auth-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  template: `\r\n    <div class=\"app-root\">\r\n      <div>\r\n        <app-auth-form>\r\n            <h3>Create Account</h3>\r\n        </app-auth-form>\r\n\r\n        <div class=\"verticalLine\"></div>\r\n\r\n        <app-auth-form>\r\n            <h3>Login</h3>\r\n        </app-auth-form>\r\n      </div>\r\n    </div>\r\n  `,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec01-content-projection/auth-form/auth-form.stories.ts",
                    "type": "Story<AuthFormComponent>",
                    "defaultValue": "(args: AuthFormComponent) => ({\r\n  component: AuthFormComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/app/sec18-dynamic-ng-template-rendering-with-ngtemplateoutlet/example.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec18-dynamic-ng-template-rendering-with-ngtemplateoutlet/example.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
                }
            ],
            "src/app/sec19-using-ngtemplateoutlet-with-context/example.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec19-using-ngtemplateoutlet-with-context/example.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
                }
            ],
            "src/app/sec21-changedetectionstrategy-onpush-and-immutability/example.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/example.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
                }
            ],
            "src/app/sec16-dynamic-ng-template-rendering-with-view-container-ref/example/example.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec16-dynamic-ng-template-rendering-with-view-container-ref/example/example.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-example></app-example>\r\n      </div>\r\n    `,\r\n})"
                }
            ],
            "src/app/sec17-passing-context-to-dynamic-ng-template/example/example.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec17-passing-context-to-dynamic-ng-template/example/example.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n  <div class=\"app-root\" style=\"padding: 15px;\">\r\n    <app-example></app-example>\r\n  </div>\r\n`,\r\n})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  component: Button,\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  component: Header,\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  component: Page,\n  props: args,\n})"
                }
            ],
            "src/app/sec02-content-projection-slots/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec02-content-projection-slots/auth-form/auth-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  template: `\r\n    <div class=\"app-root\">\r\n      <div>\r\n        <app-auth-form>\r\n          <h3>Create Account</h3>\r\n          <button type=\"submit\">\r\n            Join us\r\n          </button>\r\n        </app-auth-form>\r\n\r\n        <div class=\"verticalLine\"></div>\r\n\r\n        <app-auth-form>\r\n          <h3>Login</h3>\r\n          <button type=\"submit\">\r\n            Login\r\n          </button>\r\n        </app-auth-form>\r\n      <div>\r\n    </div>\r\n  `,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec02-content-projection-slots/auth-form/auth-form.stories.ts",
                    "type": "Story<AuthFormComponent>",
                    "defaultValue": "(args: AuthFormComponent) => ({\r\n  component: AuthFormComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/app/sec04-content-child-and-ng-after-content-init/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec04-content-child-and-ng-after-content-init/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\n  template: `\n    <div class=\"app-root\">\n      <div>\n        <app-auth-form>\n          <h3>Create Account</h3>\n          <button type=\"submit\">\n            Join us\n          </button>\n        </app-auth-form>\n\n        <div class=\"verticalLine\"></div>\n\n        <app-auth-form (submitted)=\"onSubmit($event)\">\n          <h3>Login</h3>\n          <app-auth-remember\n            (checked)=\"onChecked($event)\">\n          </app-auth-remember>\n          <button type=\"submit\">\n            Login\n          </button>\n        </app-auth-form>\n      <div>\n    </div>\n  `,\n  props: {\n    onChecked: action('onChecked'),\n    onSubmit: (e: User) => {\n      console.log('Login', e);\n    },\n  },\n})"
                }
            ],
            "src/app/sec07-view-children-and-query-lists/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec07-view-children-and-query-lists/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec05-content-children-and-query-list/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec05-content-children-and-query-list/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec06-view-child-and-ng-after-view-init/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec06-view-child-and-ng-after-view-init/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec09-element-ref-and-native-element/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec09-element-ref-and-native-element/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec08-view-child-and-template-ref/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec08-view-child-and-template-ref/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form>\r\n            <h3>Create Account</h3>\r\n            <button type=\"submit\">\r\n              Join us\r\n            </button>\r\n          </app-auth-form>\r\n\r\n          <div class=\"verticalLine\"></div>\r\n\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec10-platform-agnostic-renderer/auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec10-platform-agnostic-renderer/auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <div>\r\n          <app-auth-form (submitted)=\"onSubmit($event)\">\r\n            <h3>Login</h3>\r\n            <app-auth-remember\r\n              (checked)=\"onChecked($event)\">\r\n            </app-auth-remember>\r\n            <button type=\"submit\">\r\n              Login\r\n            </button>\r\n          </app-auth-form>\r\n        <div>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec11-dynamic-components-with-component-factory-resolver/dynamic-auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec11-dynamic-components-with-component-factory-resolver/dynamic-auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec12-dynamic-component-and-input-data/dynamic-auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec12-dynamic-component-and-input-data/dynamic-auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec14-destroying-dynamic-components/dynamic-auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec14-destroying-dynamic-components/dynamic-auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec15-dynamic-components-reordering/dynamic-auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec15-dynamic-components-reordering/dynamic-auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec13-dynamic-component-and-output-subscriptions/dynamic-auth-form/auth-form.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec13-dynamic-component-and-output-subscriptions/dynamic-auth-form/auth-form.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n      <div class=\"app-root\">\r\n        <app-dynamic-auth-form></app-dynamic-auth-form>\r\n      </div>\r\n    `,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n    onSubmit: (e: User) => {\r\n      console.log('Login', e);\r\n    },\r\n  },\r\n})"
                }
            ],
            "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                    "type": "Story<AuthRememberComponent>",
                    "defaultValue": "(\r\n  args: AuthRememberComponent\r\n) => ({\r\n  component: AuthRememberComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "TemplateTwo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                    "type": "Story<AuthRememberComponent>",
                    "defaultValue": "(\r\n  args: AuthRememberComponent\r\n) => ({\r\n  template: `\r\n    <app-auth-remember\"></app-auth-remember>\r\n  `,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n   <app-auth-remember (checked)=\"onChecked($event)\"></app-auth-remember>\r\n`,\r\n  props: {\r\n    onChecked: action('onChecked'),\r\n  },\r\n})"
                }
            ],
            "src/app/shared/components/auth-message/auth-message.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/auth-message/auth-message.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/auth-message/auth-message.stories.ts",
                    "type": "Story<AuthMessageComponent>",
                    "defaultValue": "(args: AuthMessageComponent) => ({\r\n  component: AuthMessageComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/auth-message/auth-message.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n   <app-auth-message></app-auth-message>\r\n`,\r\n})"
                }
            ],
            "src/app/sec20-viewencapsulation-and-shadow-dom/example-one.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec20-viewencapsulation-and-shadow-dom/example-one.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n   <div>Story Works!</div>\r\n`,\r\n})"
                }
            ],
            "src/app/sec22-custom-attribute-directive/custom-attribute-directive.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec22-custom-attribute-directive/custom-attribute-directive.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n    <input\r\n      appCreditCard\r\n      placeholder=\"Input example\"\r\n    >\r\n`,\r\n})"
                }
            ],
            "src/app/sec24-host-binding/custom-attribute-directive.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec24-host-binding/custom-attribute-directive.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n    <input\r\n      appCreditCard\r\n      placeholder=\"Input example\"\r\n    >\r\n`,\r\n})"
                }
            ],
            "src/app/sec23-host-listeners/custom-attribute-directive.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec23-host-listeners/custom-attribute-directive.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n    <input\r\n      appCreditCard\r\n      placeholder=\"Input example\"\r\n    >\r\n`,\r\n})"
                }
            ],
            "src/app/sec25-export-as/example.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec25-export-as/example.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  //  component: ExampleComponent,\r\n  template: `\r\n    <app-example class=\"app-root\">\r\n    <ng-template #testTemplate>\r\n      <label appTooltip=\"3 digits, back of your card\" #myTooltip=\"tooltip\">\r\n        Enter your security code\r\n        <span (mouseover)=\"myTooltip.show()\" (mouseout)=\"myTooltip.hide()\">\r\n          (?)\r\n        </span>\r\n        <input type=\"text\" />\r\n      </label>\r\n    </ng-template>\r\n    </app-example>\r\n`,\r\n})"
                }
            ],
            "src/app/sec27-custom-pipes/custom-pipes.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec27-custom-pipes/custom-pipes.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n   <div>Story Works!</div>\r\n`,\r\n})"
                }
            ],
            "src/app/sec30-formcontrol-formgroup/formcontrol-formgroup.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec30-formcontrol-formgroup/formcontrol-formgroup.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n   <div>Story Works!</div>\r\n`,\r\n})"
                }
            ],
            "src/app/sec26-custom-structural-directive/example/example.stories.ts": [
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/sec26-custom-structural-directive/example/example.stories.ts",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  template: `\r\n   <app-example></app-example>\r\n`,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec01-content-projection/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec01-content-projection/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreateAccount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec01-content-projection/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec02-content-projection-slots/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec02-content-projection-slots/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec02-content-projection-slots/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthRememberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateTwo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec03-projecting-and-binding-to-components/auth-form/auth-remember.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec04-content-child-and-ng-after-content-init/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sec04-content-child-and-ng-after-content-init/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec05-content-children-and-query-list/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/sec05-content-children-and-query-list/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec06-view-child-and-ng-after-view-init/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/sec06-view-child-and-ng-after-view-init/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec07-view-children-and-query-lists/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/sec07-view-children-and-query-lists/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec08-view-child-and-template-ref/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/sec08-view-child-and-template-ref/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec09-element-ref-and-native-element/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/sec09-element-ref-and-native-element/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec10-platform-agnostic-renderer/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/sec10-platform-agnostic-renderer/auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec11-dynamic-components-with-component-factory-resolver/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sec11-dynamic-components-with-component-factory-resolver/dynamic-auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec11-dynamic-components-with-component-factory-resolver/dynamic-auth-form/dynamic-auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicAuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec12-dynamic-component-and-input-data/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec12-dynamic-component-and-input-data/dynamic-auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec12-dynamic-component-and-input-data/dynamic-auth-form/dynamic-auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicAuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec13-dynamic-component-and-output-subscriptions/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec13-dynamic-component-and-output-subscriptions/dynamic-auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec13-dynamic-component-and-output-subscriptions/dynamic-auth-form/dynamic-auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicAuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sec14-destroying-dynamic-components/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec14-destroying-dynamic-components/dynamic-auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec14-destroying-dynamic-components/dynamic-auth-form/dynamic-auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicAuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/sec15-dynamic-components-reordering/auth-form/auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec15-dynamic-components-reordering/dynamic-auth-form/auth-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec15-dynamic-components-reordering/dynamic-auth-form/dynamic-auth-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicAuthFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/sec16-dynamic-ng-template-rendering-with-view-container-ref/example/example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec16-dynamic-ng-template-rendering-with-view-container-ref/example/example.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec17-passing-context-to-dynamic-ng-template/example/example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec17-passing-context-to-dynamic-ng-template/example/example.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec18-dynamic-ng-template-rendering-with-ngtemplateoutlet/example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec18-dynamic-ng-template-rendering-with-ngtemplateoutlet/example.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec19-using-ngtemplateoutlet-with-context/example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/sec19-using-ngtemplateoutlet-with-context/example.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec20-viewencapsulation-and-shadow-dom/example-one.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleOneComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec20-viewencapsulation-and-shadow-dom/example-one.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec20-viewencapsulation-and-shadow-dom/example-three.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleThreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec20-viewencapsulation-and-shadow-dom/example-two.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleTwoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/default-change-detection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DefaultChangeDetectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/example.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec21-changedetectionstrategy-onpush-and-immutability/onpush-change-detection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnpushChangeDetectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec22-custom-attribute-directive/credit-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CreditCardDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sec22-custom-attribute-directive/custom-attribute-directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec23-host-listeners/credit-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CreditCardDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/sec23-host-listeners/custom-attribute-directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec24-host-binding/credit-card.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CreditCardDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec24-host-binding/custom-attribute-directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec25-export-as/example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/sec25-export-as/example.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec25-export-as/tooltip.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TooltipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/sec26-custom-structural-directive/example/example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec26-custom-structural-directive/example/example.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec26-custom-structural-directive/my-for.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "MyForDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sec27-custom-pipes/custom-pipes.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sec30-formcontrol-formgroup/formcontrol-formgroup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth-message/auth-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthMessageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth-message/auth-message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth-message/auth-message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/auth-message/auth-message.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/test.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TestDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}